{"version":3,"sources":["webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src async","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/app-routing.module.ts","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/app.component.css","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/app.component.html","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/app.component.ts","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/app.module.ts","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/blog/blog.component.css","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/blog/blog.component.html","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/blog/blog.component.ts","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/blog/delete-blog/delete-blog.component.css","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/blog/delete-blog/delete-blog.component.html","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/blog/delete-blog/delete-blog.component.ts","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/blog/edit-blog/edit-blog.component.css","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/blog/edit-blog/edit-blog.component.html","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/blog/edit-blog/edit-blog.component.ts","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/dashboard/dashboard.component.css","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/dashboard/dashboard.component.html","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/dashboard/dashboard.component.ts","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/home/home.component.css","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/home/home.component.html","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/home/home.component.ts","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/login/login.component.css","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/login/login.component.html","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/login/login.component.ts","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/navbar/navbar.component.css","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/navbar/navbar.component.html","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/navbar/navbar.component.ts","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/profile/profile.component.css","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/profile/profile.component.html","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/profile/profile.component.ts","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/public-profile/public-profile.component.css","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/public-profile/public-profile.component.html","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/public-profile/public-profile.component.ts","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/register/register.component.css","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/register/register.component.html","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/register/register.component.ts","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/guards/auth.guard.ts","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/guards/notAuth.guard.ts","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/services/auth.service.ts","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/services/blog.service.ts","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/environments/environment.ts","webpack:///C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","import { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { PublicProfileComponent } from './components/public-profile/public-profile.component';\r\nimport { BlogComponent } from './components/blog/blog.component';\r\nimport { EditBlogComponent } from './components/blog/edit-blog/edit-blog.component';\r\nimport { DeleteBlogComponent } from './components/blog/delete-blog/delete-blog.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { NotAuthGuard } from './guards/notAuth.guard';\r\n\r\n// Our Array of Angular 2 Routes\r\nconst appRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomeComponent // Default Route\r\n  },\r\n  {\r\n    path: 'dashboard',\r\n    component: DashboardComponent, // Dashboard Route,\r\n    canActivate: [AuthGuard] // User must be logged in to view this route\r\n  },\r\n  {\r\n    path: 'register',\r\n    component: RegisterComponent, // Register Route\r\n    canActivate: [NotAuthGuard] // User must NOT be logged in to view this route\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent, // Login Route\r\n    canActivate: [NotAuthGuard] // User must NOT be logged in to view this route\r\n  },\r\n  {\r\n    path: 'profile',\r\n    component: ProfileComponent, // Profile Route\r\n    canActivate: [AuthGuard] // User must be logged in to view this route\r\n  },\r\n  {\r\n    path: 'blog',\r\n    component: BlogComponent, // Blog Route,\r\n    canActivate: [AuthGuard] // User must be logged in to view this route\r\n  },\r\n  {\r\n    path: 'edit-blog/:id',\r\n    component: EditBlogComponent, // Edit Blog Route\r\n    canActivate: [AuthGuard] // User must be logged in to view this route\r\n  },\r\n  {\r\n    path: 'delete-blog/:id',\r\n    component: DeleteBlogComponent, // Delete Blog Route\r\n    canActivate: [AuthGuard] // User must be logged in to view this route\r\n  },\r\n  {\r\n    path: 'user/:username',\r\n    component: PublicProfileComponent, // Public Profile Route\r\n    canActivate: [AuthGuard] // User must be logged in to view this route\r\n  },\r\n  { path: '**', component: HomeComponent } // \"Catch-All\" Route\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [RouterModule.forRoot(appRoutes)],\r\n  providers: [],\r\n  bootstrap: [],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 1","module.exports = \"<app-navbar></app-navbar>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n  <flash-messages></flash-messages>\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Hello World from Angular 2!';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { AuthService } from './services/auth.service';\r\nimport { BlogService } from './services/blog.service';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { FlashMessagesModule } from 'angular2-flash-messages';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { NotAuthGuard } from './guards/notAuth.guard';\r\nimport { BlogComponent } from './components/blog/blog.component';\r\nimport { EditBlogComponent } from './components/blog/edit-blog/edit-blog.component';\r\nimport { DeleteBlogComponent } from './components/blog/delete-blog/delete-blog.component';\r\nimport { PublicProfileComponent } from './components/public-profile/public-profile.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    HomeComponent,\r\n    DashboardComponent,\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    ProfileComponent,\r\n    BlogComponent,\r\n    EditBlogComponent,\r\n    DeleteBlogComponent,\r\n    PublicProfileComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    AppRoutingModule,\r\n    FlashMessagesModule\r\n  ],\r\n  providers: [AuthService, AuthGuard, NotAuthGuard, BlogService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/app.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* Dropdown Button */\\r\\n.dropbtn {\\r\\n    background-color: #4CAF50;\\r\\n    color: white;\\r\\n    padding: 16px;\\r\\n    font-size: 16px;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n/* The container <div> - needed to position the dropdown content */\\r\\n.dropdown {\\r\\n    position: relative;\\r\\n    display: inline-block;\\r\\n}\\r\\n\\r\\n/* Dropdown Content (Hidden by Default) */\\r\\n.dropdown-content {\\r\\n    display: none;\\r\\n    position: absolute;\\r\\n    background-color: #f9f9f9;\\r\\n    min-width: 160px;\\r\\n    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\\r\\n    z-index: 1;\\r\\n}\\r\\n\\r\\n/* Links inside the dropdown */\\r\\n.dropdown-content a {\\r\\n    color: black;\\r\\n    padding: 12px 16px;\\r\\n    text-decoration: none;\\r\\n    display: block;\\r\\n}\\r\\n\\r\\n/* Change color of dropdown links on hover */\\r\\n.dropdown-content a:hover {background-color: #f1f1f1}\\r\\n\\r\\n/* Show the dropdown menu on hover */\\r\\n.dropdown:hover .dropdown-content {\\r\\n    display: block;\\r\\n}\\r\\n\\r\\n/* Change the background color of the dropdown button when the dropdown content is shown */\\r\\n.dropdown:hover .dropbtn {\\r\\n    background-color: #3e8e41;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/blog/blog.component.css\n// module id = ../../../../../src/app/components/blog/blog.component.css\n// module chunks = 1","module.exports = \"<h1 class=\\\"page-header\\\">Blog Feed</h1>\\r\\n\\r\\n<!-- Custom Success/Error Message -->\\r\\n<div class=\\\"row show-hide-message\\\" *ngIf=\\\"message && newPost\\\">\\r\\n  <div [ngClass]=\\\"messageClass\\\">\\r\\n    {{ message }}\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- New Post Button -->\\r\\n<button type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-warning\\\" *ngIf=\\\"!newPost\\\" (click)=\\\"newBlogForm()\\\">New Post</button>\\r\\n\\r\\n<!-- Reload Button -->\\r\\n<button [disabled]=\\\"loadingBlogs\\\" type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-default\\\" *ngIf=\\\"!newPost\\\" (click)=\\\"reloadBlogs()\\\"><span class=\\\"glyphicon glyphicon-repeat\\\"></span>&nbsp;&nbsp;Reload</button>\\r\\n\\r\\n<br />\\r\\n<br />\\r\\n\\r\\n<!-- New Blog Form -->\\r\\n<form [formGroup]=\\\"form\\\" name=\\\"blogForm\\\" (submit)=\\\"onBlogSubmit()\\\" *ngIf=\\\"newPost\\\">\\r\\n  <!-- Title Input -->\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"title\\\">Title</label>\\r\\n    <div [ngClass]=\\\"{'has-success': form.controls.title.valid, 'has-error': form.controls.title.dirty && form.controls.title.errors}\\\">\\r\\n      <!-- Title Input -->\\r\\n      <input type=\\\"text\\\" name=\\\"title\\\" class=\\\"form-control\\\" placeholder=\\\"*Blog Title\\\" autocomplete=\\\"off\\\" formControlName=\\\"title\\\" />\\r\\n      <!-- Validation -->\\r\\n      <ul class=\\\"help-block\\\">\\r\\n        <li *ngIf=\\\"form.controls.title.dirty && form.controls.title.errors?.required\\\">This field is required.</li>\\r\\n        <li *ngIf=\\\"(form.controls.title.dirty && form.controls.title.errors?.minlength) || (form.controls.title.dirty && form.controls.title.errors?.maxlength)\\\">Max length: 50, Min length: 5</li>\\r\\n        <li *ngIf=\\\"form.controls.title.dirty && form.controls.title.errors?.alphaNumericValidation\\\">Must be a letter or number</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Body Input -->\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"body\\\">Body</label>\\r\\n    <div [ngClass]=\\\"{'has-success': form.controls.body.valid, 'has-error': form.controls.body.dirty && form.controls.body.errors}\\\">\\r\\n      <!-- Body Input -->\\r\\n      <textarea name=\\\"body\\\" rows=\\\"8\\\" cols=\\\"80\\\" placeholder=\\\"*Body\\\" class=\\\"form-control\\\" formControlName=\\\"body\\\"></textarea>\\r\\n      <!-- Validation -->\\r\\n      <ul class=\\\"help-block\\\">\\r\\n        <li *ngIf=\\\"form.controls.body.dirty && form.controls.body.errors?.required\\\">This field is required.</li>\\r\\n        <li *ngIf=\\\"(form.controls.body.dirty && form.controls.body.errors?.minlength) || (form.controls.body.dirty && form.controls.body.errors?.maxlength)\\\">Max length: 500, Min length: 5</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Go Back Button -->\\r\\n  <button [disabled]=\\\"processing\\\" type=\\\"button\\\" name=\\\"button\\\" (click)=\\\"goBack()\\\" class=\\\"btn btn-warning\\\">Go Back</button>\\r\\n  <!-- Submit Button -->\\r\\n  <button [disabled]=\\\"processing || !form.valid\\\" type=\\\"submit\\\" name=\\\"button\\\" class=\\\"btn btn-success\\\">Submit</button>\\r\\n\\r\\n</form>\\r\\n<!-- New Blog Form -->\\r\\n\\r\\n<!-- Panel Start -->\\r\\n<div *ngIf=\\\"!newPost\\\">\\r\\n  <!-- Panel Outer Layer -->\\r\\n  <div class=\\\"panel panel-primary\\\" *ngFor=\\\"let blog of blogPosts\\\">\\r\\n\\r\\n    <!-- Panel Title -->\\r\\n    <div class=\\\"panel-heading\\\">\\r\\n      <h3 class=\\\"panel-title\\\">{{ blog.title }}</h3>\\r\\n    </div>\\r\\n\\r\\n    <!-- Panel Body -->\\r\\n    <div class=\\\"panel-body\\\">\\r\\n      {{ blog.body }}\\r\\n    </div>\\r\\n\\r\\n    <!-- Panel Footer Start -->\\r\\n    <div class=\\\"panel-footer\\\">\\r\\n      <strong>Posted by: </strong>{{ blog.createdBy }}\\r\\n      <br />\\r\\n      <strong>Date: </strong>{{ blog.createdAt | date:'MMM dd, yyyy' }}\\r\\n      <br />\\r\\n      <div *ngIf=\\\"username === blog.createdBy\\\">\\r\\n        <strong>Likes: </strong>{{ blog.likes }}\\r\\n        <br />\\r\\n        <strong>Dislikes: </strong>{{ blog.dislikes }}\\r\\n      </div>\\r\\n\\r\\n      <!-- Edit Button -->\\r\\n      <a [routerLink]=\\\"['/edit-blog/', blog._id]\\\" *ngIf=\\\"username === blog.createdBy\\\"><button type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-sm btn-info\\\">Edit</button></a>\\r\\n      <!-- Delete Button -->\\r\\n      <a [routerLink]=\\\"['/delete-blog/', blog._id]\\\" *ngIf=\\\"username === blog.createdBy\\\"><button type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\">Delete</button></a>\\r\\n\\r\\n      <!-- Likes Dropdown  -->\\r\\n      <div class=\\\"dropdown\\\">\\r\\n        <!-- Like Button -->\\r\\n        <button [disabled]=\\\"blog.likedBy.indexOf(username) > -1\\\" type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-sm btn-success\\\" *ngIf=\\\"username !== blog.createdBy\\\" (click)=\\\"likeBlog(blog._id)\\\"><span class=\\\"glyphicon glyphicon-thumbs-up\\\">&nbsp;</span>Likes: {{ blog.likes }}</button>\\r\\n        <!-- Dropdown Menu Items -->\\r\\n        <div class=\\\"dropdown-content\\\">\\r\\n          <a [routerLink]=\\\"['/user/', liker]\\\" *ngFor=\\\"let liker of blog.likedBy\\\">{{ liker }}</a>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- Dislikes Dropdown  -->\\r\\n      <div class=\\\"dropdown\\\">\\r\\n        <!-- Dislike Button -->\\r\\n        <button [disabled]=\\\"blog.dislikedBy.indexOf(username) > -1\\\" type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-sm btn-warning\\\" *ngIf=\\\"username !== blog.createdBy\\\" (click)=\\\"dislikeBlog(blog._id)\\\"><span class=\\\"glyphicon glyphicon-thumbs-down\\\">&nbsp;</span>Dislikes: {{ blog.dislikes }}</button>\\r\\n        <!-- Dropdown Menu Items -->\\r\\n        <div class=\\\"dropdown-content\\\">\\r\\n          <a [routerLink]=\\\"['/user/', disliker]\\\" *ngFor=\\\"let disliker of blog.dislikedBy\\\">{{ disliker }}</a>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <!-- Panel Footer End -->\\r\\n\\r\\n    <!-- Post Comment Box: Start -->\\r\\n    <ul class=\\\"list-group\\\">\\r\\n      <li class=\\\"list-group-item\\\">\\r\\n        <!-- Post Comment Button -->\\r\\n        <button type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"draftComment(blog._id)\\\" [disabled]=\\\"newComment.indexOf(blog._id) > -1\\\">Post Comment</button>\\r\\n        <br />\\r\\n        <br />\\r\\n        <div *ngIf=\\\"newComment.indexOf(blog._id) > -1\\\">\\r\\n\\r\\n          <!-- Form: Comment Form Start -->\\r\\n          <form [formGroup]=\\\"commentForm\\\">\\r\\n            <!-- Textarea Input -->\\r\\n            <textarea name=\\\"comment\\\" rows=\\\"10\\\" cols=\\\"30\\\" class=\\\"form-control\\\" formControlName=\\\"comment\\\"></textarea>\\r\\n            <!-- Validation -->\\r\\n            <div [ngClass]=\\\"{'has-success': !commentForm.controls.comment.errors && commentForm.controls.comment.dirty, 'has-error': commentForm.controls.comment.dirty && commentForm.controls.comment.errors}\\\">\\r\\n              <ul class=\\\"help-block\\\">\\r\\n                <li *ngIf=\\\"commentForm.controls.comment.errors?.required && commentForm.controls.comment.dirty\\\">This field is required.</li>\\r\\n                <li *ngIf=\\\"(commentForm.controls.comment.errors?.maxlength && commentForm.controls.comment.dirty) ||(commentForm.controls.comment.errors?.minlength && commentForm.controls.comment.dirty)\\\">Comment must be at least 1 character but no more than 200.</li>\\r\\n              </ul>\\r\\n            </div>\\r\\n            <!-- Post Button -->\\r\\n            <button [disabled]=\\\"!commentForm.valid || processing\\\" type=\\\"submit\\\" name=\\\"button\\\" class=\\\"btn btn-sm btn-info\\\" (click)=\\\"postComment(blog._id)\\\">Post</button>\\r\\n            <!-- Cancel Button -->\\r\\n            <button [disabled]=\\\"processing\\\" type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"cancelSubmission(blog._id)\\\">Cancel</button>\\r\\n          </form>\\r\\n          <!-- Form: Comment Form End -->\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <!-- Show Comments -->\\r\\n        <li *ngIf=\\\"enabledComments.indexOf(blog._id) === -1 && blog.comments.length > 0\\\" class=\\\"list-group-item\\\">\\r\\n          <span (click)=\\\"expand(blog._id)\\\">\\r\\n            Show comments&nbsp;&nbsp;\\r\\n            <div class=\\\"glyphicon glyphicon-comment\\\"></div>\\r\\n          </span>\\r\\n        </li>\\r\\n\\r\\n        <!-- Hide Comments -->\\r\\n        <li *ngIf=\\\"enabledComments.indexOf(blog._id) > -1\\\" class=\\\"list-group-item\\\">\\r\\n          <span (click)=\\\"collapse(blog._id)\\\">\\r\\n            Hide Comments&nbsp;&nbsp;\\r\\n            <div class=\\\"glyphicon glyphicon-comment\\\"></div>\\r\\n          </span>\\r\\n        </li>\\r\\n\\r\\n        <!-- Comment -->\\r\\n        <div *ngIf=\\\"enabledComments.indexOf(blog._id) > -1\\\">\\r\\n          <li *ngFor=\\\"let comment of blog.comments\\\" class=\\\"list-group-item\\\">\\r\\n            <strong>{{ comment.commentator }}:</strong> {{ comment.comment }}\\r\\n          </li>\\r\\n        </div>\\r\\n    </ul>\\r\\n    <!-- Post Comment Box: End -->\\r\\n\\r\\n  </div>\\r\\n  <!-- Panel Outer Layer -->\\r\\n</div>\\r\\n<!-- Panel End -->\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/blog/blog.component.html\n// module id = ../../../../../src/app/components/blog/blog.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { BlogService } from '../../services/blog.service';\r\n\r\n@Component({\r\n  selector: 'app-blog',\r\n  templateUrl: './blog.component.html',\r\n  styleUrls: ['./blog.component.css']\r\n})\r\nexport class BlogComponent implements OnInit {\r\n\r\n  messageClass;\r\n  message;\r\n  newPost = false;\r\n  loadingBlogs = false;\r\n  form;\r\n  commentForm;\r\n  processing = false;\r\n  username;\r\n  blogPosts;\r\n  newComment = [];\r\n  enabledComments = [];\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService,\r\n    private blogService: BlogService\r\n  ) {\r\n    this.createNewBlogForm(); // Create new blog form on start up\r\n    this.createCommentForm(); // Create form for posting comments on a user's blog post\r\n  }\r\n\r\n  // Function to create new blog form\r\n  createNewBlogForm() {\r\n    this.form = this.formBuilder.group({\r\n      // Title field\r\n      title: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.maxLength(50),\r\n        Validators.minLength(5),\r\n        this.alphaNumericValidation\r\n      ])],\r\n      // Body field\r\n      body: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.maxLength(500),\r\n        Validators.minLength(5)\r\n      ])]\r\n    })\r\n  }\r\n\r\n  // Create form for posting comments\r\n  createCommentForm() {\r\n    this.commentForm = this.formBuilder.group({\r\n      comment: ['', Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(1),\r\n        Validators.maxLength(200)\r\n      ])]\r\n    })\r\n  }\r\n\r\n  // Enable the comment form\r\n  enableCommentForm() {\r\n    this.commentForm.get('comment').enable(); // Enable comment field\r\n  }\r\n\r\n  // Disable the comment form\r\n  disableCommentForm() {\r\n    this.commentForm.get('comment').disable(); // Disable comment field\r\n  }\r\n\r\n  // Enable new blog form\r\n  enableFormNewBlogForm() {\r\n    this.form.get('title').enable(); // Enable title field\r\n    this.form.get('body').enable(); // Enable body field\r\n  }\r\n\r\n  // Disable new blog form\r\n  disableFormNewBlogForm() {\r\n    this.form.get('title').disable(); // Disable title field\r\n    this.form.get('body').disable(); // Disable body field\r\n  }\r\n\r\n  // Validation for title\r\n  alphaNumericValidation(controls) {\r\n    const regExp = new RegExp(/^[a-zA-Z0-9 ]+$/); // Regular expression to perform test\r\n    // Check if test returns false or true\r\n    if (regExp.test(controls.value)) {\r\n      return null; // Return valid\r\n    } else {\r\n      return { 'alphaNumericValidation': true } // Return error in validation\r\n    }\r\n  }\r\n\r\n  // Function to display new blog form\r\n  newBlogForm() {\r\n    this.newPost = true; // Show new blog form\r\n  }\r\n\r\n  // Reload blogs on current page\r\n  reloadBlogs() {\r\n    this.loadingBlogs = true; // Used to lock button\r\n    this.getAllBlogs(); // Add any new blogs to the page\r\n    setTimeout(() => {\r\n      this.loadingBlogs = false; // Release button lock after four seconds\r\n    }, 4000);\r\n  }\r\n\r\n  // Function to post a new comment on blog post\r\n  draftComment(id) {\r\n    this.commentForm.reset(); // Reset the comment form each time users starts a new comment\r\n    this.newComment = []; // Clear array so only one post can be commented on at a time\r\n    this.newComment.push(id); // Add the post that is being commented on to the array\r\n  }\r\n\r\n  // Function to cancel new post transaction\r\n  cancelSubmission(id) {\r\n    const index = this.newComment.indexOf(id); // Check the index of the blog post in the array\r\n    this.newComment.splice(index, 1); // Remove the id from the array to cancel post submission\r\n    this.commentForm.reset(); // Reset  the form after cancellation\r\n    this.enableCommentForm(); // Enable the form after cancellation\r\n    this.processing = false; // Enable any buttons that were locked\r\n  }\r\n\r\n  // Function to submit a new blog post\r\n  onBlogSubmit() {\r\n    this.processing = true; // Disable submit button\r\n    this.disableFormNewBlogForm(); // Lock form\r\n\r\n    // Create blog object from form fields\r\n    const blog = {\r\n      title: this.form.get('title').value, // Title field\r\n      body: this.form.get('body').value, // Body field\r\n      createdBy: this.username // CreatedBy field\r\n    }\r\n\r\n    // Function to save blog into database\r\n    this.blogService.newBlog(blog).subscribe(data => {\r\n      // Check if blog was saved to database or not\r\n      if (!data.success) {\r\n        this.messageClass = 'alert alert-danger'; // Return error class\r\n        this.message = data.message; // Return error message\r\n        this.processing = false; // Enable submit button\r\n        this.enableFormNewBlogForm(); // Enable form\r\n      } else {\r\n        this.messageClass = 'alert alert-success'; // Return success class\r\n        this.message = data.message; // Return success message\r\n        this.getAllBlogs();\r\n        // Clear form data after two seconds\r\n        setTimeout(() => {\r\n          this.newPost = false; // Hide form\r\n          this.processing = false; // Enable submit button\r\n          this.message = false; // Erase error/success message\r\n          this.form.reset(); // Reset all form fields\r\n          this.enableFormNewBlogForm(); // Enable the form fields\r\n        }, 2000);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Function to go back to previous page\r\n  goBack() {\r\n    window.location.reload(); // Clear all variable states\r\n  }\r\n\r\n  // Function to get all blogs from the database\r\n  getAllBlogs() {\r\n    // Function to GET all blogs from database\r\n    this.blogService.getAllBlogs().subscribe(data => {\r\n      this.blogPosts = data.blogs; // Assign array to use in HTML\r\n    });\r\n  }\r\n\r\n  // Function to like a blog post\r\n  likeBlog(id) {\r\n    // Service to like a blog post\r\n    this.blogService.likeBlog(id).subscribe(data => {\r\n      this.getAllBlogs(); // Refresh blogs after like\r\n    });\r\n  }\r\n\r\n  // Function to disliked a blog post\r\n  dislikeBlog(id) {\r\n    // Service to dislike a blog post\r\n    this.blogService.dislikeBlog(id).subscribe(data => {\r\n      this.getAllBlogs(); // Refresh blogs after dislike\r\n    });\r\n  }\r\n\r\n  // Function to post a new comment\r\n  postComment(id) {\r\n    this.disableCommentForm(); // Disable form while saving comment to database\r\n    this.processing = true; // Lock buttons while saving comment to database\r\n    const comment = this.commentForm.get('comment').value; // Get the comment value to pass to service function\r\n    // Function to save the comment to the database\r\n    this.blogService.postComment(id, comment).subscribe(data => {\r\n      this.getAllBlogs(); // Refresh all blogs to reflect the new comment\r\n      const index = this.newComment.indexOf(id); // Get the index of the blog id to remove from array\r\n      this.newComment.splice(index, 1); // Remove id from the array\r\n      this.enableCommentForm(); // Re-enable the form\r\n      this.commentForm.reset(); // Reset the comment form\r\n      this.processing = false; // Unlock buttons on comment form\r\n      if (this.enabledComments.indexOf(id) < 0) this.expand(id); // Expand comments for user on comment submission\r\n    });\r\n  }\r\n\r\n  // Expand the list of comments\r\n  expand(id) {\r\n    this.enabledComments.push(id); // Add the current blog post id to array\r\n  }\r\n\r\n  // Collapse the list of comments\r\n  collapse(id) {\r\n    const index = this.enabledComments.indexOf(id); // Get position of id in array\r\n    this.enabledComments.splice(index, 1); // Remove id from array\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Get profile username on page load\r\n    this.authService.getProfile().subscribe(profile => {\r\n      this.username = profile.user.username; // Used when creating new blog posts and comments\r\n    });\r\n\r\n    this.getAllBlogs(); // Get all blogs on component load\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/blog/blog.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/blog/delete-blog/delete-blog.component.css\n// module id = ../../../../../src/app/components/blog/delete-blog/delete-blog.component.css\n// module chunks = 1","module.exports = \"<h1 class=\\\"page-header\\\">Delete Blog</h1>\\r\\n\\r\\n<!-- Custom Success/Error Message -->\\r\\n<div class=\\\"row show-hide-message\\\" *ngIf=\\\"message\\\">\\r\\n  <div [ngClass]=\\\"messageClass\\\">\\r\\n    {{ message }}\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Modal Confirmation Window -->\\r\\n<div class=\\\"col-md-6\\\" *ngIf=\\\"foundBlog\\\">\\r\\n  <!-- Model Outer Layer -->\\r\\n  <div class=\\\"modal-content\\\">\\r\\n    <!-- Modal Header -->\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <!-- Close Button -->\\r\\n      <button type=\\\"button\\\" name=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n      <!-- Modal Title -->\\r\\n      <h4 class=\\\"modal-title\\\">Confirm</h4>\\r\\n    </div>\\r\\n\\r\\n    <!-- Modal Body -->\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <p>Are you sure you would like to delete this blog?</p>\\r\\n    </div>\\r\\n\\r\\n    <!-- Modal Footer -->\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <!-- Yes Button -->\\r\\n      <button [disabled]=\\\"processing\\\" type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"deleteBlog()\\\">Yes</button>\\r\\n      <!-- No Button -->\\r\\n      <a routerLink=\\\"/blog\\\"><button [disabled]=\\\"processing\\\" type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-danger\\\">No</button></a>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <br />\\r\\n\\r\\n  <!-- Panel -->\\r\\n  <div class=\\\"panel panel-primary\\\">\\r\\n    <!-- Panel Heading -->\\r\\n    <div class=\\\"panel-heading\\\">\\r\\n      <!-- Panel Title -->\\r\\n      <h3 class=\\\"panel-title\\\">{{ blog.title }}</h3>\\r\\n    </div>\\r\\n\\r\\n    <!-- Panel Body -->\\r\\n    <div class=\\\"panel-body\\\">\\r\\n      {{ blog.body }}\\r\\n    </div>\\r\\n\\r\\n    <!-- Panel Footer -->\\r\\n    <div class=\\\"panel-footer\\\">\\r\\n      <strong>Posted by: </strong> {{ blog.createdBy }}\\r\\n      <br />\\r\\n      <strong>Date: </strong> {{ blog.createdAt | date:'MMM dd, yyyy' }}\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/blog/delete-blog/delete-blog.component.html\n// module id = ../../../../../src/app/components/blog/delete-blog/delete-blog.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\nimport { BlogService } from '../../../services/blog.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-delete-blog',\r\n  templateUrl: './delete-blog.component.html',\r\n  styleUrls: ['./delete-blog.component.css']\r\n})\r\nexport class DeleteBlogComponent implements OnInit {\r\n  message;\r\n  messageClass;\r\n  foundBlog = false;\r\n  processing = false;\r\n  blog;\r\n  currentUrl;\r\n\r\n  constructor(\r\n    private blogService: BlogService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router\r\n  ) { }\r\n\r\n  // Function to delete blogs\r\n  deleteBlog() {\r\n    this.processing = true; // Disable buttons\r\n    // Function for DELETE request\r\n    this.blogService.deleteBlog(this.currentUrl.id).subscribe(data => {\r\n      // Check if delete request worked\r\n      if (!data.success) {\r\n        this.messageClass = 'alert alert-danger'; // Return error bootstrap class\r\n        this.message = data.message; // Return error message\r\n      } else {\r\n        this.messageClass = 'alert alert-success'; // Return bootstrap success class\r\n        this.message = data.message; // Return success message\r\n        // After two second timeout, route to blog page\r\n        setTimeout(() => {\r\n          this.router.navigate(['/blog']); // Route users to blog page\r\n        }, 2000);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.currentUrl = this.activatedRoute.snapshot.params; // Get URL paramaters on page load\r\n    // Function for GET request to retrieve blog\r\n    this.blogService.getSingleBlog(this.currentUrl.id).subscribe(data => {\r\n      // Check if request was successfull\r\n      if (!data.success) {\r\n        this.messageClass = 'alert alert-danger'; // Return bootstrap error class\r\n        this.message = data.message; // Return error message\r\n      } else {\r\n        // Create the blog object to use in HTML\r\n        this.blog = {\r\n          title: data.blog.title, // Set title\r\n          body: data.blog.body, // Set body\r\n          createdBy: data.blog.createdBy, // Set created_by field\r\n          createdAt: data.blog.createdAt // Set created_at field\r\n        }\r\n        this.foundBlog = true; // Displaly blog window\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/blog/delete-blog/delete-blog.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/blog/edit-blog/edit-blog.component.css\n// module id = ../../../../../src/app/components/blog/edit-blog/edit-blog.component.css\n// module chunks = 1","module.exports = \"<h1 class=\\\"page-header\\\">Edit Blog</h1>\\r\\n\\r\\n<!-- Custom Success/Erro Message -->\\r\\n<div class=\\\"row show-hide-message\\\" *ngIf=\\\"message\\\">\\r\\n  <div [ngClass]=\\\"messageClass\\\">\\r\\n    {{ message }}\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Edit Blog Form -->\\r\\n<form (submit)=\\\"updateBlogSubmit()\\\" *ngIf=\\\"!loading\\\">\\r\\n  <!-- Title Field -->\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"title\\\">Title</label>\\r\\n    <!-- Title Input -->\\r\\n    <input [disabled]=\\\"processing\\\" type=\\\"text\\\" name=\\\"title\\\" placeholder=\\\"*Blog Title\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"blog.title\\\" #title=\\\"ngModel\\\" />\\r\\n  </div>\\r\\n\\r\\n  <!-- Body Field -->\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"body\\\">Body</label>\\r\\n    <!-- Body Input -->\\r\\n    <textarea [disabled]=\\\"processing\\\" name=\\\"body\\\" rows=\\\"8\\\" cols=\\\"80\\\" [(ngModel)]=\\\"blog.body\\\" #body=\\\"ngModel\\\" class=\\\"form-control\\\" placeholder=\\\"*Blog Body\\\"></textarea>\\r\\n  </div>\\r\\n\\r\\n  <!-- Delete Button -->\\r\\n  <a [routerLink]=\\\"['/delete-blog/', blog._id]\\\"><button  [disabled]=\\\"processing\\\"  type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-danger\\\">Delete</button></a>\\r\\n  <!-- Go Back Button -->\\r\\n  <button [disabled]=\\\"processing\\\" type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"goBack()\\\">Go Back</button>\\r\\n  <!-- Save Changes Button -->\\r\\n  <button [disabled]=\\\"processing || (!title.dirty && !body.dirty)\\\" type=\\\"submit\\\" name=\\\"save\\\" class=\\\"btn btn-info\\\">Save Changes</button>\\r\\n\\r\\n</form>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/blog/edit-blog/edit-blog.component.html\n// module id = ../../../../../src/app/components/blog/edit-blog/edit-blog.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BlogService } from '../../../services/blog.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-blog',\r\n  templateUrl: './edit-blog.component.html',\r\n  styleUrls: ['./edit-blog.component.css']\r\n})\r\nexport class EditBlogComponent implements OnInit {\r\n\r\n  message;\r\n  messageClass;\r\n  blog;\r\n  processing = false;\r\n  currentUrl;\r\n  loading = true;\r\n\r\n  constructor(\r\n    private location: Location,\r\n    private activatedRoute: ActivatedRoute,\r\n    private blogService: BlogService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  // Function to Submit Update\r\n  updateBlogSubmit() {\r\n    this.processing = true; // Lock form fields\r\n    // Function to send blog object to backend\r\n    this.blogService.editBlog(this.blog).subscribe(data => {\r\n      // Check if PUT request was a success or not\r\n      if (!data.success) {\r\n        this.messageClass = 'alert alert-danger'; // Set error bootstrap class\r\n        this.message = data.message; // Set error message\r\n        this.processing = false; // Unlock form fields\r\n      } else {\r\n        this.messageClass = 'alert alert-success'; // Set success bootstrap class\r\n        this.message = data.message; // Set success message\r\n        // After two seconds, navigate back to blog page\r\n        setTimeout(() => {\r\n          this.router.navigate(['/blog']); // Navigate back to route page\r\n        }, 2000);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Function to go back to previous page\r\n  goBack() {\r\n    this.location.back();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.currentUrl = this.activatedRoute.snapshot.params; // When component loads, grab the id\r\n    // Function to GET current blog with id in params\r\n    this.blogService.getSingleBlog(this.currentUrl.id).subscribe(data => {\r\n      // Check if GET request was success or not\r\n      if (!data.success) {\r\n        this.messageClass = 'alert alert-danger'; // Set bootstrap error class\r\n        this.message = data.message; // Set error message\r\n      } else {\r\n        this.blog = data.blog; // Save blog object for use in HTML\r\n        this.loading = false; // Allow loading of blog form\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/blog/edit-blog/edit-blog.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/dashboard/dashboard.component.css\n// module id = ../../../../../src/app/components/dashboard/dashboard.component.css\n// module chunks = 1","module.exports = \"<h1 class=\\\"page-header\\\">Dashboard Route</h1>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/dashboard/dashboard.component.html\n// module id = ../../../../../src/app/components/dashboard/dashboard.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/dashboard/dashboard.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/home/home.component.css\n// module id = ../../../../../src/app/components/home/home.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"jumbotron text-center\\\">\\r\\n  <h1>MEAN Stack Application</h1>\\r\\n  <p class=\\\"lead\\\">Welcome to the MEAN Stack Application by <strong>David Acosta</strong></p>\\r\\n  <div>\\r\\n    <a *ngIf=\\\"!authService.loggedIn()\\\" routerLink=\\\"/register\\\" class=\\\"btn btn-primary\\\">Register</a>\\r\\n    <a *ngIf=\\\"!authService.loggedIn()\\\" routerLink=\\\"/login\\\" class=\\\"btn btn-default\\\">Login</a>\\r\\n    <a *ngIf=\\\"authService.loggedIn()\\\" routerLink=\\\"/blog\\\" class=\\\"btn btn-success\\\">View Blogs</a>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-6 col-md-4\\\">\\r\\n    <div class=\\\"thumbnail\\\">\\r\\n      <img src=\\\"https://image.flaticon.com/icons/svg/417/417745.svg\\\" alt=\\\"placeholder image\\\" width=\\\"140\\\" height=\\\"140\\\">\\r\\n      <div class=\\\"caption\\\">\\r\\n        <h3>MongoDB</h3>\\r\\n        <p>MongoDB is a free and open-source cross-platform document-oriented database program. This NoSQL database program uses JSON-like documents with schemas.</p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-sm-6 col-md-4\\\">\\r\\n    <div class=thumbnail> <img src=\\\"https://image.flaticon.com/icons/svg/417/417746.svg\\\" alt=\\\"Generic placeholder image\\\" width=\\\"140\\\" height=\\\"140\\\">\\r\\n      <div class=caption>\\r\\n        <h3>ExpressJS</h3>\\r\\n        <p>Express.js is a Node.js framework. Node.js is a platform that allows JavaScript to be used outside the Web Browsers, for creating web and network applications.</p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-sm-6 col-md-4\\\">\\r\\n    <div class=thumbnail> <img src=\\\"https://image.flaticon.com/icons/svg/417/417751.svg\\\" alt=\\\"Generic placeholder image\\\" width=\\\"140\\\" height=\\\"140\\\">\\r\\n      <div class=caption>\\r\\n        <h3>Angular 2</h3>\\r\\n        <p>Angular is a development platform for building mobile and desktop web applications. Ut dignissim eleifend maximus. Ut dignissim eleifend maximus. Ut dignissim eleifend.</p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-sm-6 col-md-4\\\">\\r\\n    <div class=thumbnail> <img src=\\\"https://image.flaticon.com/icons/svg/417/417754.svg\\\" alt=\\\"Generic placeholder image\\\" width=\\\"140\\\" height=\\\"140\\\">\\r\\n      <div class=caption>\\r\\n        <h3>NodeJS</h3>\\r\\n        <p>Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient.</p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-sm-6 col-md-4\\\">\\r\\n    <div class=thumbnail> <img src=\\\"https://image.flaticon.com/icons/svg/417/417768.svg\\\" alt=\\\"Generic placeholder image\\\" width=\\\"140\\\" height=\\\"140\\\">\\r\\n      <div class=caption>\\r\\n        <h3>Lorem Ipsum</h3>\\r\\n        <p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-sm-6 col-md-4\\\">\\r\\n    <div class=thumbnail> <img src=\\\"https://image.flaticon.com/icons/svg/417/417764.svg\\\" alt=\\\"Generic placeholder image\\\" width=\\\"140\\\" height=\\\"140\\\">\\r\\n      <div class=caption>\\r\\n        <h3>Lorem Ipsum</h3>\\r\\n        <p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/home/home.component.html\n// module id = ../../../../../src/app/components/home/home.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor(\r\n    public authService: AuthService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/home/home.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/login/login.component.css\n// module id = ../../../../../src/app/components/login/login.component.css\n// module chunks = 1","module.exports = \"<h2 class=\\\"page-header\\\">Login</h2>\\r\\n\\r\\n<!-- Custom Success/Error Message -->\\r\\n<div class=\\\"row show-hide-message\\\">\\r\\n  <div [ngClass]=\\\"messageClass\\\">\\r\\n    {{ message }}\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Login Form -->\\r\\n<form [formGroup]=\\\"form\\\" (submit)=\\\"onLoginSubmit()\\\">\\r\\n\\r\\n  <!-- Username Field -->\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"username\\\">Username</label>\\r\\n    <div [ngClass]=\\\"{'has-error': form.controls.username.errors && form.controls.username.dirty, 'has-success': form.controls.username.valid && form.controls.username.dirty }\\\">\\r\\n      <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"username\\\" formControlName=\\\"username\\\" />\\r\\n      <!-- Validation -->\\r\\n      <ul class=\\\"help-block\\\">\\r\\n        <li *ngIf=\\\"form.controls.username.errors?.required && form.controls.username.dirty\\\">This field is required.</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Password Field  -->\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"password\\\">Password</label>\\r\\n    <div [ngClass]=\\\"{'has-error': form.controls.password.errors && form.controls.password.dirty, 'has-success': form.controls.password.valid && form.controls.password.dirty }\\\">\\r\\n      <input class=\\\"form-control\\\" type=\\\"password\\\" name=\\\"password\\\" formControlName=\\\"password\\\" />\\r\\n      <!-- Validation -->\\r\\n      <ul class=\\\"help-block\\\">\\r\\n        <li *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\">This field is required.</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- Submit Button -->\\r\\n  <input [disabled]=\\\"!form.valid || processing\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"Login\\\" />\\r\\n</form>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/login/login.component.html\n// module id = ../../../../../src/app/components/login/login.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { AuthGuard } from '../../guards/auth.guard';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  messageClass;\r\n  message;\r\n  processing = false;\r\n  form;\r\n  previousUrl;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private authGuard: AuthGuard\r\n  ) {\r\n    this.createForm(); // Create Login Form when component is constructed\r\n  }\r\n\r\n  // Function to create login form\r\n  createForm() {\r\n    this.form = this.formBuilder.group({\r\n      username: ['', Validators.required], // Username field\r\n      password: ['', Validators.required] // Password field\r\n    });\r\n  }\r\n\r\n  // Function to disable form\r\n  disableForm() {\r\n    this.form.controls['username'].disable(); // Disable username field\r\n    this.form.controls['password'].disable(); // Disable password field\r\n  }\r\n\r\n  // Function to enable form\r\n  enableForm() {\r\n    this.form.controls['username'].enable(); // Enable username field\r\n    this.form.controls['password'].enable(); // Enable password field\r\n  }\r\n\r\n  // Functiont to submit form and login user\r\n  onLoginSubmit() {\r\n    this.processing = true; // Used to submit button while is being processed\r\n    this.disableForm(); // Disable form while being process\r\n    // Create user object from user's input\r\n    const user = {\r\n      username: this.form.get('username').value, // Username input field\r\n      password: this.form.get('password').value // Password input field\r\n    }\r\n\r\n    // Function to send login data to API\r\n    this.authService.login(user).subscribe(data => {\r\n      // Check if response was a success or error\r\n      if (!data.success) {\r\n        this.messageClass = 'alert alert-danger'; // Set bootstrap error class\r\n        this.message = data.message; // Set error message\r\n        this.processing = false; // Enable submit button\r\n        this.enableForm(); // Enable form for editting\r\n      } else {\r\n        this.messageClass = 'alert alert-success'; // Set bootstrap success class\r\n        this.message = data.message; // Set success message\r\n        // Function to store user's token in client local storage\r\n        this.authService.storeUserData(data.token, data.user);\r\n        // After 2 seconds, redirect to dashboard page\r\n        setTimeout(() => {\r\n          // Check if user was redirected or logging in for first time\r\n          if (this.previousUrl) {\r\n            this.router.navigate([this.previousUrl]); // Redirect to page they were trying to view before\r\n          } else {\r\n            this.router.navigate(['/dashboard']); // Navigate to dashboard view\r\n          }\r\n        }, 2000);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    // On page load, check if user was redirected to login\r\n    if (this.authGuard.redirectUrl) {\r\n      this.messageClass = 'alert alert-danger'; // Set error message: need to login\r\n      this.message = 'You must be logged in to view that page.'; // Set message\r\n      this.previousUrl = this.authGuard.redirectUrl; // Set the previous URL user was redirected from\r\n      this.authGuard.redirectUrl = undefined; // Erase previous URL\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/login/login.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/navbar/navbar.component.css\n// module id = ../../../../../src/app/components/navbar/navbar.component.css\n// module chunks = 1","module.exports = \"<!-- Fixed navbar -->\\r\\n<nav class=\\\"navbar navbar-default\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"navbar-header\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbar\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"navbar\\\">\\r\\n         <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n         <span class=\\\"icon-bar\\\"></span>\\r\\n         <span class=\\\"icon-bar\\\"></span>\\r\\n         <span class=\\\"icon-bar\\\"></span>\\r\\n       </button>\\r\\n      <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">MEAN Stack Blog</a>\\r\\n    </div>\\r\\n    <div id=\\\"navbar\\\" class=\\\"navbar-collapse collapse\\\">\\r\\n      <ul class=\\\"nav navbar-nav navbar-left\\\">\\r\\n        <li [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"><a routerLink=\\\"/\\\">Home</a></li>\\r\\n      </ul>\\r\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n        <li *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"><a routerLink=\\\"/dashboard\\\">Dashboard</a></li>\\r\\n        <li><a *ngIf=\\\"authService.loggedIn()\\\" routerLink=\\\"/profile\\\">Profile</a></li>\\r\\n        <li><a *ngIf=\\\"authService.loggedIn()\\\" routerLink=\\\"/blog\\\">Blog</a></li>\\r\\n        <li><a *ngIf=\\\"!authService.loggedIn()\\\" routerLink=\\\"/login\\\">Login</a></li>\\r\\n        <li><a *ngIf=\\\"authService.loggedIn()\\\" href=\\\"#\\\" (click)=\\\"onLogoutClick()\\\">Logout</a></li>\\r\\n        <li *ngIf=\\\"!authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"><a routerLink=\\\"/register\\\">Register</a></li>\\r\\n      </ul>\\r\\n    </div>\\r\\n    <!--/.nav-collapse -->\\r\\n  </div>\\r\\n</nav>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/navbar/navbar.component.html\n// module id = ../../../../../src/app/components/navbar/navbar.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor(\r\n    public authService: AuthService,\r\n    private router: Router,\r\n    private flashMessagesService: FlashMessagesService\r\n  ) { }\r\n\r\n  // Function to logout user\r\n  onLogoutClick() {\r\n    this.authService.logout(); // Logout user\r\n    this.flashMessagesService.show('You are logged out', { cssClass: 'alert-info' }); // Set custom flash message\r\n    this.router.navigate(['/']); // Navigate back to home page\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/navbar/navbar.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/profile/profile.component.css\n// module id = ../../../../../src/app/components/profile/profile.component.css\n// module chunks = 1","module.exports = \"<h2 class=\\\"page-header\\\">Profile Page</h2>\\r\\n<ul class=\\\"list-group\\\">\\r\\n  <li class=\\\"list-group-item\\\">Username: {{ username }}</li>\\r\\n  <li class=\\\"list-group-item\\\">Email: {{ email }}</li>\\r\\n</ul>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/profile/profile.component.html\n// module id = ../../../../../src/app/components/profile/profile.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  username = '';\r\n  email = '';\r\n\r\n  constructor(\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    // Once component loads, get user's data to display on profile\r\n    this.authService.getProfile().subscribe(profile => {\r\n      this.username = profile.user.username; // Set username\r\n      this.email = profile.user.email; // Set e-mail\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/profile/profile.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/public-profile/public-profile.component.css\n// module id = ../../../../../src/app/components/public-profile/public-profile.component.css\n// module chunks = 1","module.exports = \"<h1 class=\\\"page-header\\\">Public Profile</h1>\\r\\n\\r\\n<!-- Custom Success/Error Message -->\\r\\n<div class=\\\"row show-hide-message\\\" *ngIf=\\\"message\\\">\\r\\n  <div [ngClass]=\\\"messageClass\\\">\\r\\n    {{ message }}\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Table to Display User Info -->\\r\\n<ul *ngIf=\\\"foundProfile\\\" class=\\\"list-group\\\">\\r\\n  <!-- Username -->\\r\\n  <li class=\\\"list-group-item\\\"><strong>Username: </strong>{{ username }}</li>\\r\\n  <!-- E-Mail -->\\r\\n  <li class=\\\"list-group-item\\\"><strong>E-Mail: </strong>{{ email }}</li>\\r\\n</ul>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/public-profile/public-profile.component.html\n// module id = ../../../../../src/app/components/public-profile/public-profile.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-public-profile',\r\n  templateUrl: './public-profile.component.html',\r\n  styleUrls: ['./public-profile.component.css']\r\n})\r\nexport class PublicProfileComponent implements OnInit {\r\n  currentUrl;\r\n  username;\r\n  email;\r\n  foundProfile = false;\r\n  messageClass;\r\n  message;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private activatedRoute: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.currentUrl = this.activatedRoute.snapshot.params; // Get URL parameters on page load\r\n    // Service to get the public profile data\r\n    this.authService.getPublicProfile(this.currentUrl.username).subscribe(data => {\r\n      // Check if user was found in database\r\n      if (!data.success) {\r\n        this.messageClass = 'alert alert-danger'; // Return bootstrap error class\r\n        this.message = data.message; // Return error message\r\n      } else {\r\n        this.username = data.user.username; // Save the username for use in HTML\r\n        this.email = data.user.email; // Save the email for use in HTML\r\n        this.foundProfile = true; // Enable profile table\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/public-profile/public-profile.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/register/register.component.css\n// module id = ../../../../../src/app/components/register/register.component.css\n// module chunks = 1","module.exports = \"<h1 class=\\\"page-header\\\">Register Page</h1>\\r\\n\\r\\n<!-- Custom Success/Error Message -->\\r\\n<div class=\\\"row show-hide-message\\\">\\r\\n  <div [ngClass]=\\\"messageClass\\\">\\r\\n    {{ message }}\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Registration Form -->\\r\\n<form [formGroup]=\\\"form\\\" (submit)=\\\"onRegisterSubmit()\\\">\\r\\n\\r\\n  <!-- Username Input -->\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"username\\\">Username</label>\\r\\n    <div [ngClass]=\\\"{'has-error': (form.controls.username.errors && form.controls.username.dirty) || (!usernameValid && form.controls.username.dirty), 'has-success': !form.controls.username.errors && usernameValid}\\\">\\r\\n      <input type=\\\"text\\\" name=\\\"username\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Username\\\" formControlName=\\\"username\\\" (blur)=\\\"checkUsername()\\\"  />\\r\\n      <!-- Validation -->\\r\\n      <ul class=\\\"help-block\\\">\\r\\n        <li *ngIf=\\\"form.controls.username.errors?.required && form.controls.username.dirty\\\">This field is required</li>\\r\\n        <li *ngIf=\\\"form.controls.username.errors?.minlength && form.controls.username.dirty || form.controls.username.errors?.maxlength && form.controls.username.dirty \\\">Minimum characters: 3, Maximum characters: 15</li>\\r\\n        <li *ngIf=\\\"form.controls.username.errors?.validateUsername && form.controls.username.dirty\\\">Username must not have any special characters</li>\\r\\n        <li *ngIf=\\\"usernameMessage\\\">{{ usernameMessage }}</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Email Input -->\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"email\\\">Email</label>\\r\\n    <div [ngClass]=\\\"{'has-error': (form.controls.email.errors && form.controls.email.dirty) || (!emailValid && form.controls.email.dirty), 'has-success': !form.controls.email.errors && emailValid}\\\">\\r\\n      <input type=\\\"text\\\" name=\\\"email\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Email\\\" formControlName=\\\"email\\\" (blur)=\\\"checkEmail()\\\" />\\r\\n      <!-- Validation -->\\r\\n      <ul class=\\\"help-block\\\">\\r\\n        <li *ngIf=\\\"form.controls.email.errors?.required && form.controls.email.dirty\\\">This field is required</li>\\r\\n        <li *ngIf=\\\"(form.controls.email.errors?.minlength && form.controls.email.dirty || form.controls.email.errors?.maxlength && form.controls.email.dirty ) && form.controls.email.dirty\\\">Minimum characters: 5, Maximum characters: 30</li>\\r\\n        <li *ngIf=\\\"form.controls.email.errors?.validateEmail && form.controls.email.dirty\\\">This must be a valid e-mail</li>\\r\\n        <li *ngIf=\\\"emailMessage\\\">{{ emailMessage}}</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Password Input -->\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"password\\\">Password</label>\\r\\n    <div [ngClass]=\\\"{'has-error': (form.controls.password.errors && form.controls.password.dirty), 'has-success': !form.controls.password.errors}\\\">\\r\\n      <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Password\\\" formControlName=\\\"password\\\" />\\r\\n      <!-- Validation -->\\r\\n      <ul class=\\\"help-block\\\">\\r\\n        <li *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\">This field is required</li>\\r\\n        <li *ngIf=\\\"form.controls.password.errors?.minlength && form.controls.password.dirty || form.controls.password.errors?.maxlength && form.controls.password.dirty \\\">Minimum characters: 8, Maximum characters: 35</li>\\r\\n        <li *ngIf=\\\"form.controls.password.errors?.validatePassword && form.controls.password.dirty\\\">Password must be at least 8 characters but no more than 35</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Confirm Password Input -->\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"confirm\\\">Confirm Password</label>\\r\\n    <div [ngClass]=\\\"{'has-error': (form.controls.confirm.errors && form.controls.confirm.dirty) || (form.errors?.matchingPasswords && form.controls.confirm.dirty), 'has-success': !form.controls.confirm.errors && !form.errors?.matchingPasswords}\\\">\\r\\n      <input type=\\\"password\\\" name=\\\"confirm\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Confirm Password\\\" formControlName=\\\"confirm\\\" />\\r\\n      <!-- Validation -->\\r\\n      <ul class=\\\"help-block\\\">\\r\\n        <li *ngIf=\\\"form.controls.confirm.errors?.required && form.controls.confirm.dirty\\\">This field is required</li>\\r\\n        <li *ngIf=\\\"form.errors?.matchingPasswords && form.controls.confirm.dirty\\\">Password do not match</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Submit Input -->\\r\\n  <input [disabled]=\\\"!form.valid || processing || !emailValid || !usernameValid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\" />\\r\\n\\r\\n</form>\\r\\n<!-- Registration Form /-->\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/register/register.component.html\n// module id = ../../../../../src/app/components/register/register.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  form;\r\n  message;\r\n  messageClass;\r\n  processing = false;\r\n  emailValid;\r\n  emailMessage;\r\n  usernameValid;\r\n  usernameMessage;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n    this.createForm(); // Create Angular 2 Form when component loads\r\n  }\r\n\r\n  // Function to create registration form\r\n  createForm() {\r\n    this.form = this.formBuilder.group({\r\n      // Email Input\r\n      email: ['', Validators.compose([\r\n        Validators.required, // Field is required\r\n        Validators.minLength(5), // Minimum length is 5 characters\r\n        Validators.maxLength(30), // Maximum length is 30 characters\r\n        this.validateEmail // Custom validation\r\n      ])],\r\n      // Username Input\r\n      username: ['', Validators.compose([\r\n        Validators.required, // Field is required\r\n        Validators.minLength(3), // Minimum length is 3 characters\r\n        Validators.maxLength(15), // Maximum length is 15 characters\r\n        this.validateUsername // Custom validation\r\n      ])],\r\n      // Password Input\r\n      password: ['', Validators.compose([\r\n        Validators.required, // Field is required\r\n        Validators.minLength(8), // Minimum length is 8 characters\r\n        Validators.maxLength(35), // Maximum length is 35 characters\r\n        this.validatePassword // Custom validation\r\n      ])],\r\n      // Confirm Password Input\r\n      confirm: ['', Validators.required] // Field is required\r\n    }, { validator: this.matchingPasswords('password', 'confirm') }); // Add custom validator to form for matching passwords\r\n  }\r\n\r\n  // Function to disable the registration form\r\n  disableForm() {\r\n    this.form.controls['email'].disable();\r\n    this.form.controls['username'].disable();\r\n    this.form.controls['password'].disable();\r\n    this.form.controls['confirm'].disable();\r\n  }\r\n\r\n  // Function to enable the registration form\r\n  enableForm() {\r\n    this.form.controls['email'].enable();\r\n    this.form.controls['username'].enable();\r\n    this.form.controls['password'].enable();\r\n    this.form.controls['confirm'].enable();\r\n  }\r\n\r\n  // Function to validate e-mail is proper format\r\n  validateEmail(controls) {\r\n    // Create a regular expression\r\n    const regExp = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\r\n    // Test email against regular expression\r\n    if (regExp.test(controls.value)) {\r\n      return null; // Return as valid email\r\n    } else {\r\n      return { 'validateEmail': true } // Return as invalid email\r\n    }\r\n  }\r\n\r\n  // Function to validate username is proper format\r\n  validateUsername(controls) {\r\n    // Create a regular expression\r\n    const regExp = new RegExp(/^[a-zA-Z0-9]+$/);\r\n    // Test username against regular expression\r\n    if (regExp.test(controls.value)) {\r\n      return null; // Return as valid username\r\n    } else {\r\n      return { 'validateUsername': true } // Return as invalid username\r\n    }\r\n  }\r\n\r\n  // Function to validate password\r\n  validatePassword(controls) {\r\n    // Create a regular expression\r\n    const regExp = new RegExp(/^(?=.*?[a-z])(?=.*?[A-Z])(?=.*?[\\d])(?=.*?[\\W]).{8,35}$/);\r\n    // Test password against regular expression\r\n    if (regExp.test(controls.value)) {\r\n      return null; // Return as valid password\r\n    } else {\r\n      return { 'validatePassword': true } // Return as invalid password\r\n    }\r\n  }\r\n\r\n  // Funciton to ensure passwords match\r\n  matchingPasswords(password, confirm) {\r\n    return (group: FormGroup) => {\r\n      // Check if both fields are the same\r\n      if (group.controls[password].value === group.controls[confirm].value) {\r\n        return null; // Return as a match\r\n      } else {\r\n        return { 'matchingPasswords': true } // Return as error: do not match\r\n      }\r\n    }\r\n  }\r\n\r\n  // Function to submit form\r\n  onRegisterSubmit() {\r\n    alert('hiiiiiiii');\r\n    this.processing = true; // Used to notify HTML that form is in processing, so that it can be disabled\r\n    this.disableForm(); // Disable the form\r\n    // Create user object form user's inputs\r\n    const user = {\r\n      email: this.form.get('email').value, // E-mail input field\r\n      username: this.form.get('username').value, // Username input field\r\n      password: this.form.get('password').value // Password input field\r\n    }\r\n\r\n    // Function from authentication service to register user\r\n    this.authService.registerUser(user).subscribe(data => {\r\n      // Resposne from registration attempt\r\n      if (!data.success) {\r\n        this.messageClass = 'alert alert-danger'; // Set an error class\r\n        this.message = data.message; // Set an error message\r\n        this.processing = false; // Re-enable submit button\r\n        this.enableForm(); // Re-enable form\r\n      } else {\r\n        this.messageClass = 'alert alert-success'; // Set a success class\r\n        this.message = data.message; // Set a success message\r\n        // After 2 second timeout, navigate to the login page\r\n        setTimeout(() => {\r\n          this.router.navigate(['/login']); // Redirect to login view\r\n        }, 2000);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  // Function to check if e-mail is taken\r\n  checkEmail() {\r\n    // Function from authentication file to check if e-mail is taken\r\n    this.authService.checkEmail(this.form.get('email').value).subscribe(data => {\r\n      // Check if success true or false was returned from API\r\n      if (!data.success) {\r\n        this.emailValid = false; // Return email as invalid\r\n        this.emailMessage = data.message; // Return error message\r\n      } else {\r\n        this.emailValid = true; // Return email as valid\r\n        this.emailMessage = data.message; // Return success message\r\n      }\r\n    });\r\n  }\r\n\r\n  // Function to check if username is available\r\n  checkUsername() {\r\n    // Function from authentication file to check if username is taken\r\n    this.authService.checkUsername(this.form.get('username').value).subscribe(data => {\r\n      // Check if success true or success false was returned from API\r\n      if (!data.success) {\r\n        this.usernameValid = false; // Return username as invalid\r\n        this.usernameMessage = data.message; // Return error message\r\n      } else {\r\n        this.usernameValid = true; // Return username as valid\r\n        this.usernameMessage = data.message; // Return success message\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/components/register/register.component.ts","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  redirectUrl;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  // Function to check if user is authorized to view route\r\n  canActivate(\r\n    router: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ) {\r\n    // Check if user is logge din\r\n    if (this.authService.loggedIn()) {\r\n      return true; // Return true: User is allowed to view route\r\n    } else {\r\n      this.redirectUrl = state.url; // Grab previous urul\r\n      this.router.navigate(['/login']); // Return error and route to login page\r\n      return false; // Return false: user not authorized to view page\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/guards/auth.guard.ts","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class NotAuthGuard implements CanActivate {\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  // Function to determine whether user is authorized to view route\r\n  canActivate() {\r\n    // Check if user is logged in\r\n    if (this.authService.loggedIn()) {\r\n      this.router.navigate(['/']); // Return error, route to home\r\n      return false; // Return false: user not allowed to view route\r\n    } else {\r\n      return true; // Return true: user is allowed to view route\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/guards/notAuth.guard.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\nimport { tokenNotExpired } from 'angular2-jwt';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n  // domain = \"\"; // Production\r\n  domain = environment.domain;\r\n  authToken;\r\n  user;\r\n  options;\r\n\r\n  constructor(\r\n    private http: Http\r\n  ) { }\r\n\r\n  // Function to create headers, add token, to be used in HTTP requests\r\n  createAuthenticationHeaders() {\r\n    this.loadToken(); // Get token so it can be attached to headers\r\n    // Headers configuration options\r\n    this.options = new RequestOptions({\r\n      headers: new Headers({\r\n        'Content-Type': 'application/json', // Format set to JSON\r\n        'authorization': this.authToken // Attach token\r\n      })\r\n    });\r\n  }\r\n\r\n  // Function to get token from client local storage\r\n  loadToken() {\r\n    this.authToken = localStorage.getItem('token');; // Get token and asssign to variable to be used elsewhere\r\n  }\r\n\r\n  // Function to register user accounts\r\n  registerUser(user) {\r\n    return this.http.post(this.domain + 'authentication/register', user).map(res => res.json());\r\n  }\r\n\r\n  // Function to check if username is taken\r\n  checkUsername(username) {\r\n    return this.http.get(this.domain + 'authentication/checkUsername/' + username).map(res => res.json());\r\n  }\r\n\r\n  // Function to check if e-mail is taken\r\n  checkEmail(email) {\r\n    return this.http.get(this.domain + 'authentication/checkEmail/' + email).map(res => res.json());\r\n  }\r\n\r\n  // Function to login user\r\n  login(user) {\r\n    return this.http.post(this.domain + 'authentication/login', user).map(res => res.json());\r\n  }\r\n\r\n  // Function to logout\r\n  logout() {\r\n    this.authToken = null; // Set token to null\r\n    this.user = null; // Set user to null\r\n    localStorage.clear(); // Clear local storage\r\n  }\r\n\r\n  // Function to store user's data in client local storage\r\n  storeUserData(token, user) {\r\n    localStorage.setItem('token', token); // Set token in local storage\r\n    localStorage.setItem('user', JSON.stringify(user)); // Set user in local storage as string\r\n    this.authToken = token; // Assign token to be used elsewhere\r\n    this.user = user; // Set user to be used elsewhere\r\n  }\r\n\r\n  // Function to get user's profile data\r\n  getProfile() {\r\n    this.createAuthenticationHeaders(); // Create headers before sending to API\r\n    return this.http.get(this.domain + 'authentication/profile', this.options).map(res => res.json());\r\n  }\r\n\r\n  // Function to get public profile data\r\n  getPublicProfile(username) {\r\n    this.createAuthenticationHeaders(); // Create headers before sending to API\r\n    return this.http.get(this.domain + 'authentication/publicProfile/' + username, this.options).map(res => res.json());\r\n  }\r\n\r\n  // Function to check if user is logged in\r\n  loggedIn() {\r\n    return tokenNotExpired();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/services/auth.service.ts","import { Injectable } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\n\r\n@Injectable()\r\nexport class BlogService {\r\n\r\n  options;\r\n  domain = this.authService.domain;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private http: Http\r\n  ) { }\r\n\r\n  // Function to create headers, add token, to be used in HTTP requests\r\n  createAuthenticationHeaders() {\r\n    this.authService.loadToken(); // Get token so it can be attached to headers\r\n    // Headers configuration options\r\n    this.options = new RequestOptions({\r\n      headers: new Headers({\r\n        'Content-Type': 'application/json', // Format set to JSON\r\n        'authorization': this.authService.authToken // Attach token\r\n      })\r\n    });\r\n  }\r\n\r\n  // Function to create a new blog post\r\n  newBlog(blog) {\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.post(this.domain + 'blogs/newBlog', blog, this.options).map(res => res.json());\r\n  }\r\n\r\n  // Function to get all blogs from the database\r\n  getAllBlogs() {\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.get(this.domain + 'blogs/allBlogs', this.options).map(res => res.json());\r\n  }\r\n\r\n  // Function to get the blog using the id\r\n  getSingleBlog(id) {\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.get(this.domain + 'blogs/singleBlog/' + id, this.options).map(res => res.json());\r\n  }\r\n\r\n  // Function to edit/update blog post\r\n  editBlog(blog) {\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.put(this.domain + 'blogs/updateBlog/', blog, this.options).map(res => res.json());\r\n  }\r\n\r\n  // Function to delete a blog\r\n  deleteBlog(id) {\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    return this.http.delete(this.domain + 'blogs/deleteBlog/' + id, this.options).map(res => res.json());\r\n  }\r\n\r\n  // Function to like a blog post\r\n  likeBlog(id) {\r\n    const blogData = { id: id };\r\n    return this.http.put(this.domain + 'blogs/likeBlog/', blogData, this.options).map(res => res.json());\r\n  }\r\n\r\n  // Function to dislike a blog post\r\n  dislikeBlog(id) {\r\n    const blogData = { id: id };\r\n    return this.http.put(this.domain + 'blogs/dislikeBlog/', blogData, this.options).map(res => res.json());\r\n  }\r\n\r\n  // Function to post a comment on a blog post\r\n  postComment(id, comment) {\r\n    this.createAuthenticationHeaders(); // Create headers\r\n    // Create blogData to pass to backend\r\n    const blogData = {\r\n      id: id,\r\n      comment: comment\r\n    }\r\n    return this.http.post(this.domain + 'blogs/comment', blogData, this.options).map(res => res.json());\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/app/services/blog.service.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  domain: \"http://localhost:8080/\"\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/environments/environment.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { environment } from './environments/environment';\r\nimport { AppModule } from './app/app.module';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// C:/htdocs/mean/examples/MEAN-Stack-With-Angular-2-Tutorial/client/src/main.ts"],"sourceRoot":""}